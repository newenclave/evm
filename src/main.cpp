#include <iostream>
#include <sstream>
#include "evm/machine.h"
#include "evm/endian.h"

namespace {
	void print_stack(evm::machine *M)
	{
		std::ostringstream oss;
		oss << "[";
		std::size_t top = static_cast<std::size_t>(M->get_registers().sp);
		while (top) {
			oss << " " << M->get_stack()[top].data.u64_value;
			--top;
		}
		oss << " ]";
		std::cout << oss.str() << "\n";
	}
}

int main() 
{

	evm::machine M(4096);
	M.memory().assign({
		0xC2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		
/*16*/	0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x01,
		0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x02,
		0x05,
		0xC1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1,
/*44*/
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,

/*64*/	0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, /*main begins*/
		0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1,
		0x05,
		0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2,
		0x07,
		0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0,
		0x0D,
		0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0,
		0xC0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10,
		      0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x02,
		0xFE,
	});
	while (M.running()) {
		auto call = M.fetch();
		call(&M);
		print_stack(&M);
	}

    return 0;
}
